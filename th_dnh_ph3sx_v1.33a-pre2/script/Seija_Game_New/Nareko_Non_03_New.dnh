#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nareko_Non_03_New"]
//#Background["./Stage/STG_03/STG_BG.dnh"];
#Player[ "./Player/PL_Reimu.dnh" ]
#System["./System/System_Main_Hud.dnh"]

//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );


//---------------------------------------------------Include-------------------------------------------------------

	#include "./lib/Index_Boss.dnh"

//----------------------------------------------------Start--------------------------------------------------------

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	T_HitEffect( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	

	Init_Boss_Nareko( bossObj );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/2 + 8, 15, 8 );
	
	
	//SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 3000 ); // 3000-4500 For Nons ( At 100% Damage Rate. )
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 30 ); //40-50 For standard Nons.
	}	


} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );
	
	SetCommonData( "Effect_X", bossX );
	SetCommonData( "Effect_Y", bossY );	

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 


//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {


	//NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_RED );
	
	//let Color = [ DOT_GRAY, DOT_RED, DOT_YELLOW, DOT_CYAN, DOT_PURPLE, DOT_GREEN ];

	yield;
	wait( 100 );

	//T_Boss_Shot_B;
	ObjEnemy_SetDamageRate( bossObj, 1, 1 );
	T_Boss_Shot_A;
	//T_Movement_A;
	
	//wait( 200 );

}	


task T_Boss_Shot_A{
	
	float ShotAngle = 0;
	float ShotAngle_B = 45;
	//float Shot_Range = 8;
	
	int Way = 3;
	int Stack = 8;
	float Laser_Width = 10;
	float Laser_Length = 100;
	//float Spacing = 8;
	
	float Sub_ShotRange = 8;
	int Sub_Shotrate = 4; 
	int Shot_Color_Sub = SHOT_DOT_DORANGE;
	//int[] Tip_Color = [ SHOT_LASER_TIP_ORANGE, SHOT_LASER_TIP_BLUE, SHOT_LASER_TIP_RED ];
	
	while( Boss_Is_Alive( bossObj )){
		
		if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ){
			T_Charge_A1( bossObj, 40, "Maple", CC_ORANGE );
			T_PlaySE( SE_CHARGE_00, 35 );		
		}
		wait( 50 );
		
		Obj_SetValue( bossObj,"Cast", 1 );
		
		wait( 30 );
		
		if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ){
			T_PlaySE( SE_BURST_00, 30 );
			T_Charge_Burst_A( bossObj, "Maple", CC_ORANGE );
			
			T_SubShot_A( 16, 5, 90 + ShotAngle_B, SHOT_ORB_YELLOW );
			
			wait( 10 );
			
			//ShotAngle_B+= 10;
			
			T_SubShot_A( 16, 3.4, 90 + ShotAngle_B*2, SHOT_ORB_YELLOW );
			//T_Burst_Circle_A1( bossObj, CC_ORANGE );		
		}

		wait( 260 );

		ShotAngle_B+= 10;
		
		yield;
	}		
	
	
	
	task T_SubShot_A( Count, Init_Speed, Init_Angle, Color ){
		
		//int SubShot_Angle = 16;
		//int Count = 0;
		int Base_Radius = 48;
		int Init_Radius = 10;
		
			
		async{
			
			wait( 80 );
			
			ascent( c in 0..24 ){	
				T_SubShot_B();	
				
				ShotAngle += 10;

				wait( 8 );
			}	
			
			ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2 + rand( -32, 32 ), Get_CenterY/2 + 6 + rand( -8, 8 ), 10, 3 );	
			Obj_SetValue( bossObj,"Cast", 0 );
		}		
		
		ascent( i in 0..Count ){
		
			int ShotObj_Core = ShotA1( bossX, bossY - 60, Init_Speed, Init_Angle + i * 360/Count, Color, 10 );
			T_ManageShot_A( ShotObj_Core, Count, Init_Angle + i * 360/Count, i  );
			
			//wait( 10 );
		
		}
		task T_ManageShot_A( Shot, Count, Init_Angle, ID ){

			ObjMove_AddPatternA2( Shot, 1, NO_CHANGE, NO_CHANGE, -0.05, 0, 0 );
			
			wait( 80 );	
			
			ascent( c in 0..20 ){
				//T_SubShot_B();
				
				if( !Obj_IsDeleted( Shot )){
					
					T_PlaySE( SE_LASER_02, 26 );
					let Laser_Obj_A = Laser_A1( ObjMove_GetX( Shot ), ObjMove_GetY( Shot ), Init_Angle + (c*1.6)/2, 400, 8, 20, SHOT_CURVY_LASER_YELLOW, 30 );
					let Laser_Obj_B = Laser_A1( ObjMove_GetX( Shot ), ObjMove_GetY( Shot ), Init_Angle - (c*1.6)/2, 400, 8, 20, SHOT_CURVY_LASER_YELLOW, 30 );
					
					wait( 8 );
				}
			}
			
			ObjShot_SetIntersectionEnable( Shot, false );
			ascent( a in 0..32 ){
				ObjRender_SetScaleXYZ( Shot, 1 - a * 1/32, 1 - a * 1/32, 1 - a * 1/32 );
				yield;
			}
					
			Obj_Delete( Shot );
			
		}
	}

	task T_SubShot_B(){
		
		int SubShot_Angle = 16;
		
		if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ){
			ascent( a in 0..10 ){

				T_PlaySE( SE_CHIME_02, 35 );
				int ShotObj_A = ShotA1( bossX + rand( -Sub_ShotRange, Sub_ShotRange ) , bossY + rand( -Sub_ShotRange, Sub_ShotRange )- 64, 3, ( 90 + a * 360/10 ) + ShotAngle, SHOT_DOT_DORANGE, 10 );
					//int ShotObj_A = ShotA1( bossX, bossY - 64, 2.4, ( 90 + a * 360/10 ) + ShotAngle, SHOT_DOT_DORANGE, 10 );
				ObjMove_AddPatternA2( ShotObj_A, 30, NO_CHANGE, NO_CHANGE, -0.08, 0, 0 );
				ObjMove_AddPatternA2( ShotObj_A, 100, NO_CHANGE, ObjMove_GetAngle( ShotObj_A ) + SubShot_Angle, 0.01, 1, 0 );
						
				ObjRender_SetBlendType( ShotObj_A, BLEND_ADD_ARGB  );
				SubShot_Angle = -SubShot_Angle;
			}	
		}
		
	}	
	
}			

//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		
		yield;
		
		SetAutoDeleteObject(true);
		T_Boss_Shotdown( bossObj, "Petal", CC_RED );
		wait( 200 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
		NotifyEventAll( EV_SPAWN_ITEM_NON, bossX, bossY, 30, 64 );	
		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 600 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

