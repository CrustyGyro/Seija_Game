#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Hinoya_Non_00"]
#Background["./Stage/STG_01/STG_BG.dnh"];
#Player[ "./Player/PL_Reimu.dnh", "./Player/EGoA_Reimu_A.dnh" ]
#System["./System/System_Main_Hud.dnh"]

//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );

let BossTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Test_Boss.png";
let Prism_Tex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Prism.png";
let CutinTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Cutin/Hinoya.png";

//---------------------------------------------------Include-------------------------------------------------------

	#include "./lib/Index_Boss.dnh"
	#include "./lib/Lib_Spell.dnh"
	#include "./lib/Lib_SpellCutin.dnh"

//----------------------------------------------------Start--------------------------------------------------------

@Loading{
	
	LoadTexture( CutinTex );
	
	
}	

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	
	//ObjPrim_SetTexture( bossObj, BossTex );
	Render_Boss_Chimi( bossObj );
	//Render_WheelGhost_A1( bossObj, ENEMY_RED );
	//ObjSprite2D_SetSourceRect( bossObj, 0, 0, 128, 128 );
	//ObjSprite2D_SetDestCenter( bossObj );
	//ObjRender_SetScaleX( bossObj, 2 );
	//ObjRender_SetScaleY( bossObj, 2);	
	//T_Render_AtInt( bossObj, Resolution );
	
	ObjRender_SetTextureFilter( bossObj, FILTER_POINT, FILTER_POINT, FILTER_POINT );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/1.5 + 16, 15, 8 );
	
	
	SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 3800 ); // 2500
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 45 );
	}	


} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 

//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {

	
	float ShotAngle = 0;
	float Radius = 64;
	float WaitTime = 10;
	float Dir = 3;
	float Wvel = 2;
	
	float X = 0;
	float Y = 0;
	
	NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_RED );
	
	//let Color = [ DOT_GRAY, DOT_RED, DOT_YELLOW, DOT_CYAN, DOT_PURPLE, DOT_GREEN ];

	yield;

	wait( 45 );	
	
	ObjEnemy_SetDamageRate( bossObj, 1, 1 );
	//ObjEnemyBossScene_StartSpell( objScene );
	
	//T_CallSpell_A1( "Fire Sign \"Fugue of Chrysanthemum and Peony\"", 0, 1, objScene );
	//T_SpellBG_Hinoya();
	//T_Call_Spell_Cutin( CutinTex, [ 0, 0, 969, 1084 ], 0.4, CC_ORANGE );
	
	//wait( 200 );	
	
	int[] Core_Color = [ SHOT_ORB_RED, SHOT_ORB_ORANGE, SHOT_ORB_YELLOW, SHOT_ORB_OLIVE ];
	int[] Shot_Color = [ SHOT_BALL_DRED, SHOT_BALL_DORANGE, SHOT_BALL_DYELLOW, SHOT_BALL_DOLIVE ];
	int[] Trail_Color = [ SHOT_FIREBALL_RED, SHOT_FIREBALL_ORANGE, SHOT_FIREBALL_YELLOW, SHOT_FIREBALL_OLIVE ];	
	
	T_Boss_Shot_B;
	
	while( Boss_Is_Alive( bossObj )){
		
		T_PlaySE( SE_CHARGE_00, 30 );
		T_Charge_A1( bossObj, 20, "Petal", CC_YELLOW );	
		
		wait( 60 );
		
		descent( i in 0..4 ){ 
			T_Boss_Shot_A( 0 + i * 90/4, 2 + i/4, Core_Color[i], Trail_Color[i], Shot_Color[i], 30 ); 
			
			wait( 10 ); 
			
			T_Boss_Shot_A( 180 - i * 90/4, 2 + i/4, Core_Color[i], Trail_Color[i], Shot_Color[i], 30 ); 
			
			wait( 10 ); 
		}

		wait( 144 );
		
		ObjMove_SetDestAtWeight( bossObj, Get_CenterX + rand_int( -32, 32 ), Get_CenterY/1.5 + rand_int( -20, 20), 15, 1 );

		T_PlaySE( SE_CHARGE_00, 30 );
		T_Charge_A1( bossObj, 20, "Petal", CC_RED );	
		
		wait( 60 );
		
		ascent( b in 0..4 ){
			descent( i in 0..8 ){ 
				T_Boss_Shot_A( i * 360/8, 2 + i/8, Core_Color[b], Trail_Color[b], Shot_Color[b], 30 ); 

				//T_Boss_Shot_A( i * 360/8, 2 + i/8, Core_Color[0], Trail_Color[0], Shot_Color[0], 30 ); 

			}
			wait( 40 );
		}
		wait( 144 );
		
	}	
	
	/*
	while(Boss_Is_Alive( bossObj )){
		
		//T_PlaySE( SE_CHARGE_00, 30 );
		//T_Charge_A1( bossObj, 20, "Petal", CC_YELLOW );	
		
		T_Boss_Shot_A( bossX + rand( -256, 256 ), bossY + 128 , 60, 64 );
		
		wait( 100 );
		
	}		
	*/
}	

task T_Boss_Shot_A( Angle, Speed, Color, Trail_Color, Shot_Color, Delay ){
	
	//let Color_Array = [ BALL_S_RED, BALL_S_RED, BALL_S_RED, BALL_M_RED ];
	
	//int Way = 1;
	//int Stack = 1;
	
	T_PlaySE( SE_CHIME_02, 35 );
	
	let Firework_A = ShotA1( bossX, bossY, Speed, Angle, Color, 10 );
	T_Manage_Firework_A( Firework_A );
	T_Manage_Firework_B( Firework_A );
	
	ObjMove_AddPatternC2( Firework_A, Delay, NO_CHANGE, NO_CHANGE, NO_CHANGE, -0.08, NO_CHANGE, -4, 0, 0  ); 
	ObjMove_AddPatternC2( Firework_A, Delay*2, NO_CHANGE, NO_CHANGE, NO_CHANGE, 0.08, NO_CHANGE, 0.5, 0, 0  ); 
	
	wait( Delay );
	
	T_PlaySE( SE_FIREWORKS_01, 30 );

	//----------------------------------------------

	task T_Manage_Firework_A( Obj ){
		
		wait( Delay );
		
		//float Frame = 0;
		
		while( !Obj_IsDeleted( Obj )){
		
			let Shot_Trail_A = ShotA2( ObjMove_GetX( Obj ) + rand( -8, 8 ), ObjMove_GetY( Obj ) + rand( -8, 8 ), 1, ObjMove_GetAngle( Obj ) -180 + rand( -24, 24 ), Trail_Color, 20, Trail_Color );	
			ObjRender_SetBlendType( Shot_Trail_A, BLEND_ADD_ARGB );
				
			ObjShot_SetDeleteFrame( Shot_Trail_A, 10 );	
		
			wait( 4 );
		
		}
		
	}	
	
	task T_Manage_Firework_B( Obj ){
		
		int Burst_Way = 5;
		int Burst_Stack = 4;			
		
		wait( Delay*2.5 );
		
		if( !Obj_IsDeleted( Obj ) ){
			T_PlaySE( SE_CHIME_01, 35 );
			T_PlaySE( SE_FIREWORKS_00, 30 );
			
			let Pattern_Obj_A = Pattern_Shot_A1( ObjMove_GetX( Obj ), ObjMove_GetY( Obj ), 1, 16, -90, 2, Shot_Color, PATTERN_POLYGON, Burst_Way, Burst_Stack, 20, SHOT_BALL_DORANGE );
			for( int i = 0; i < Burst_Way * Burst_Stack; i++ ) { ObjMove_AddPatternA2( Pattern_Obj_A[i], 60, NO_CHANGE, NO_CHANGE, 0.05, rand( 1.2, 2 ), 0 ); }	
			
			let Pattern_Obj_B = Pattern_Shot_A1( ObjMove_GetX( Obj ), ObjMove_GetY( Obj ), 1, 16, -90, 2, Trail_Color, PATTERN_POLYGON, Burst_Way, Burst_Stack*2, 20, Trail_Color );
			for( int i = 0; i < Burst_Way * Burst_Stack*2; i++ ) {ObjShot_SetDeleteFrame( Pattern_Obj_B[i], 40 ); Obj_SetRenderPriorityI( Pattern_Obj_B[i], Obj_GetRenderPriorityI( Pattern_Obj_B[i] ) + 1);}		
		}	
		Obj_Delete( Obj );	
		
	}	
	
	//----------------------------------------------
	

}	

task T_Boss_Shot_B{
	
	float Shot_Angle = 90;
	
	while( Boss_Is_Alive( bossObj )){
		
		T_PlaySE( SE_CHIME_00, 35 );
		
		ascent( b in 0..8 ){
			ascent( i in 0..10 ){
				ShotR1_KeepSpeed( bossX + rand( -10, 10 ), bossY + rand( -10, 10 ), 64, 1.5, Shot_Angle + i * 360/10, SHOT_STAR_DAQUA, 16, SHOT_DOT_DAQUA );
				
			}
			
			wait( 2 );
		}
		Shot_Angle += 10;
		wait( 40 );
		//wait( 6 );
	}
}	

//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//NotifyEventAll( EV_CLEAR_ENEMIES ); // WIll add proper functionality to this later - Seija
		//NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, bossObj, 60, 14 );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		//wait( 60 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 360 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 200 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

