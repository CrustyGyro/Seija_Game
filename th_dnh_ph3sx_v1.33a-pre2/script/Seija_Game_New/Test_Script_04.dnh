#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Test_Script_04"]
#Background["./Stage/STG_03/STG_BG.dnh"];
#Player[ "./Player/PL_Reimu.dnh" ]
#System["./System/System_Main_Hud.dnh"]

//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );

//let BossTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Test_Boss.png";
//let BossTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/TH20_Nareko.png";

//---------------------------------------------------Include-------------------------------------------------------

	#include "./lib/Index_Boss.dnh"

//----------------------------------------------------Start--------------------------------------------------------

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	T_HitEffect( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	

	Init_Boss_Nareko( bossObj );
	//Render_Boss_Basic( bossObj, BossTex, 11, 4, 4, 64, 96 );
	//Render_Boss_Nareko( bossObj );

	//ObjRender_SetTextureFilter( bossObj, FILTER_NONE, FILTER_NONE, FILTER_NONE );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/1.4 + 8, 15, 8 );
	
	
	//SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 3500 ); // 3000-4500 For Nons ( At 100% Damage Rate. )
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 45 ); //40-50 For standard Nons.
	}	


} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );
	
	SetCommonData( "Effect_X", bossX );
	SetCommonData( "Effect_Y", bossY );	

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 

//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {


	NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_RED );
	
	//let Color = [ DOT_GRAY, DOT_RED, DOT_YELLOW, DOT_CYAN, DOT_PURPLE, DOT_GREEN ];

	yield;

	wait( 45 );	
	
	//T_PlaySE( SE_CHARGE_00, 30 );
	//T_Charge_A1( bossObj, 20, "Petal", CC_PINK );

	//wait( 100 );	
	
	ObjEnemy_SetDamageRate( bossObj, 1, 1 );

	wait( 80 );

	//T_Boss_Shot_B;
	
	T_Boss_Shot_C;
	//T_Movement_A;
	
	wait( 200 );

}	


task T_Boss_Shot_C{
	
	float ShotAngle = -90;
	float Shot_Range = 8;
	
	int Way = 3;
	int Stack = 8;
	float Laser_Width = 10;
	float Laser_Length = 100;
	float Spacing = 8;
	
	int[] Shot_Color = [ SHOT_CURVY_LASER_ORANGE, SHOT_CURVY_LASER_BLUE, SHOT_CURVY_LASER_RED ];
	int[] Tip_Color = [ SHOT_LASER_TIP_ORANGE, SHOT_LASER_TIP_BLUE, SHOT_LASER_TIP_RED ];
	
	while( Boss_Is_Alive( bossObj )){
		
		//Obj_SetValue( bossObj,"Cast", 1 );	
		T_Charge_A1( bossObj, 40, "Maple", CC_ORANGE );
		T_PlaySE( SE_CHARGE_00, 35 );
		
		wait( 80 );			
		
		Obj_SetValue( bossObj,"Cast", 1 );	
		
		wait( 10 );	
		
		T_PlaySE( SE_SHOT_00, 35 );
		T_Burst_Circle_A1( bossObj, CC_ORANGE );
			
			
		ShotAngle = 90;	
			
		loop( 4 ){	
			ascent( c in 0..3 ) {
				
				int[] Shot_Obj_A = Pattern_Laser_A1( bossX, bossY - 64, 4.5, Laser_Width, Laser_Length, 24, -ShotAngle + c *Spacing/3, 1, Shot_Color[ 1 ], PATTERN_POLYGON, Way, Stack, 1, Shot_Color[ 1 ] );
				int[] Shot_Obj_B = Pattern_Shot_A1( bossX, bossY - 64, 4.5, 24, -ShotAngle + c *Spacing/3, 1, Tip_Color[ 1 ], PATTERN_POLYGON, Way, Stack, 1, Tip_Color[ 1 ] );
		
				for( int i = 0; i < Way * Stack; i++ ) {
					ObjRender_SetBlendType( Shot_Obj_A[i], BLEND_ADD_ARGB  );
					//ObjRender_SetBlendType( Shot_Obj_B[i], BLEND_ADD_ARGB  );
					//ObjMove_AddPatternA2( Shot_Obj[i], 60, NO_CHANGE, NO_CHANGE, -0.05, 0, 0 );
					//ObjMove_AddPatternA2( Shot_Obj[i], rand( 100, 120 ), NO_CHANGE, GetAngleToPlayer( bossObj ) + rand( -80, 80 ), 0.02, 1, 0 );				
					//yield;
				}			
				
				//Spacing += 1;
				
				wait( 6 );
			}
			
			wait( 1 );
			
			//ShotAngle = 90;
			
			ascent( c in 0..3 ) {
				
				int[] Shot_Obj_A = Pattern_Laser_A1( bossX, bossY - 64, 4.5, Laser_Width, Laser_Length, 24, -ShotAngle - c *Spacing/3, 1, SHOT_CURVY_LASER_ORANGE, PATTERN_POLYGON, Way, Stack, 1, SHOT_CURVY_LASER_ORANGE );
				int[] Shot_Obj_B = Pattern_Shot_A1( bossX, bossY - 64, 4.5, 24, -ShotAngle - c *Spacing/3, 1, Tip_Color[ 0 ], PATTERN_POLYGON, Way, Stack, 1, Tip_Color[ 0 ] );
		
				for( int i = 0; i < Way * Stack; i++ ) {
					ObjRender_SetBlendType( Shot_Obj_A[i], BLEND_ADD_ARGB  );
					//ObjRender_SetBlendType( Shot_Obj_B[i], BLEND_ADD_ARGB  );
					//ObjMove_AddPatternA2( Shot_Obj[i], 60, NO_CHANGE, NO_CHANGE, -0.05, 0, 0 );
					//ObjMove_AddPatternA2( Shot_Obj[i], rand( 100, 120 ), NO_CHANGE, GetAngleToPlayer( bossObj ) + rand( -80, 80 ), 0.02, 1, 0 );				
					//yield;
				}			
				
				//Spacing += 1;
				
				wait( 6 );
			}		
			
			wait( 1 );
			yield;
		}
		wait( 80 );		
		
		Obj_SetValue( bossObj,"Cast", 0 );	
		ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2 + rand( -32, 32 ), Get_CenterY/2 + 6 + rand( -8, 8 ), 10, 3 );	
		
		//T_Charge_A1( bossObj, 40, "Maple", CC_BLUE );
		//T_PlaySE( SE_CHARGE_00, 35 );
		//Spacing = 1;
		wait( 30 );
	}		
	
	task T_Shot_Sub_A(){
		
		ascent( b in 0..2 ){
			ascent( a in 0..10 ){
				
				T_PlaySE( SE_CHIME_02, 35 );
				
				int ShotObj_A = ShotA1( bossX + rand( -Shot_Range, Shot_Range ), bossY + rand( -Shot_Range, Shot_Range ) - 64, 2.4, ( 90 + a * 360/10 ) + ShotAngle, SHOT_DOT_DORANGE, 10 );
				ObjMove_AddPatternA2( ShotObj_A, 60, NO_CHANGE, NO_CHANGE, -0.05, 0, 0 );
				ObjMove_AddPatternA2( ShotObj_A, rand( 100, 120 ), NO_CHANGE, GetAngleToPlayer( bossObj ) + rand( -80, 80 ), 0.02, 1, 0 );
				
				ObjRender_SetBlendType( ShotObj_A, BLEND_ADD_ARGB  );
				//yield;
			}	
			
			wait( 1 );
		}	
		
	}	
	
}	

task T_Movement_A{

	let X = 0;
	let Y = 0;
	
	while( Boss_Is_Alive( bossObj ) ){

		ObjMove_SetDestAtWeight( bossObj, Get_CenterX+ cos( X )*256, Get_CenterY + sin( Y )*256, 65, 3 );
		X += 1;
		Y += 1;
		
		yield;
	}
}


//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		
		yield;
		
		SetAutoDeleteObject(true);
		T_Boss_Shotdown( bossObj, "Petal", CC_RED );
		wait( 200 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
	
		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

