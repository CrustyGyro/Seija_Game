#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nareko_Spell_01"]
#Background["./Stage/STG_03/STG_BG.dnh"];
#Player[ "./Player/PL_Reimu.dnh" ]
#System["./System/System_Main_Hud.dnh"]

//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );


//---------------------------------------------------Include-------------------------------------------------------

	#include "./lib/Index_Boss.dnh"
	#include "./lib/Lib_Spell.dnh"
	#include "./lib/Lib_SpellCutin.dnh"

//----------------------------------------------------Start--------------------------------------------------------

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	T_HitEffect( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	

	Init_Boss_Nareko( bossObj );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/2 + 32, 15, 8 );
	
	
	//SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 2000 ); // 3000-4500 For Nons ( At 100% Damage Rate. )
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 45 );
	}	
	case( EV_REQUEST_SPELL_SCORE ){
       SetScriptResult( 5000000 );
    }	



} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );
	
	SetCommonData( "Effect_X", bossX );
	SetCommonData( "Effect_Y", bossY );	

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 


task T_InitSpell(){
	
	let CutinTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Cutin/CurseOfRa.png";
	
	T_CallSpell_A1( "Logic Wall: \"Mental Blockade\"", 0, "Normal", objScene );
	T_Call_Spell_Cutin( CutinTex, [ 0, 0, 200, 384 ], 1, CC_ORANGE );	
	
	ObjEnemyBossScene_StartSpell( objScene );
	
	yield;
	//T_SpellBG_Iwabami();	
	
}	


//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {


	NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_RED );
	
	//let Color = [ DOT_GRAY, DOT_RED, DOT_YELLOW, DOT_CYAN, DOT_PURPLE, DOT_GREEN ];

	yield;

	wait( 45 );	
	
	//T_PlaySE( SE_CHARGE_00, 30 );
	//T_Charge_A1( bossObj, 20, "Petal", CC_PINK );

	//wait( 100 );	
	
	ObjEnemy_SetDamageRate( bossObj, 0.5, 0.8 );

	wait( 80 );

	T_InitSpell();
	//T_Boss_Shot_B;
	
	wait( 80 );
	//T_Boss_Shot_C;
	
	T_Boss_Shot_E;
	//T_Movement_A;
	
	wait( 200 );

}	

task T_Boss_Shot_E(){
	
	float Angle = 90;
	
	while( !Obj_IsDeleted( bossObj ) ){
	
		if( Boss_Is_Alive( bossObj ) ){
			T_Charge_A1( bossObj, 40, "Maple", CC_ORANGE );
			T_PlaySE( SE_CHARGE_00, 35 );		
		}
		wait( 50 );
		
		Obj_SetValue( bossObj,"Cast", 1 );
		
		wait( 30 );
	
		ascent( b in 0..3 ){
	
			int Fam_A = Create_Famliar_A1( bossX, bossY - 64, "None", CC_RED, 1000, false, 1, 1, 128 );
			ObjMove_AddPatternA2( Fam_A, 1, 1, Angle + b * 360/3, 0.01, 3, 0 );
			ObjMove_AddPatternA2( Fam_A, 60, NO_CHANGE, NO_CHANGE, -0.1, 0, 0 );
			
			T_Manage_Fam( Fam_A );
		
		}
		
		wait( 60 );
		
		Obj_SetValue( bossObj,"Cast", 0 );
	
		Angle = -Angle;
	
		wait( 300 );


	}
	
	task T_Manage_Fam( Obj ){
				
		wait( 120 );
				
		let Angle_Base = GetAngleToPlayer( Obj );
				
		ascent( b in 0..8 ){
					
			let Laser_Obj = Laser_A1( ObjMove_GetX( Obj ), ObjMove_GetY( Obj ), Angle_Base + b * 360/8, 512, 14, 200, SHOT_CURVY_LASER_ORANGE, 60 );
					
		}	
				
	}		
	
}	

task T_Boss_Shot_D{
	
	while( !Obj_IsDeleted( bossObj ) ){
		
		T_Familiar( bossX + 128, bossY );
		T_Familiar( bossX - 128, bossY );
		T_Familiar( bossX, bossY + 64 );
			
			
		wait( 400 );
		
		T_Familiar( bossX + 128, bossY );
		T_Familiar( bossX - 128, bossY );
		T_Familiar( bossX, bossY - 64 );
			
		wait( 400 );		
	
	}
	//yield;
	
	task T_Familiar( X, Y ){
		
		int Fam_A = Create_Famliar_A1( X, Y, "None", CC_RED, 1000, false, 1, 1, 128 );
		
		wait( 60 );
		
		while( !Obj_IsDeleted( Fam_A ) ){
			
			
			let Angle_Base = GetAngleToPlayer( Fam_A );
			
			async{
				
				T_PlaySE( SE_CHIME_02, 30 );
				wait( 60 );
				T_PlaySE( SE_LASER_02, 24 );
				wait( 200 );
				T_PlaySE( SE_CHIME_02, 35 );
				
			}	
			
			ascent( b in 0..10 ){
				
				let Laser_Obj = Laser_A1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), Angle_Base + b * 360/10, 512, 14, 200, SHOT_CURVY_LASER_ORANGE, 60 );
				//T_Manage_Laser( Laser_Obj, Angle_Base + b * 360/10 );
				
				ascent( a in 0..16 ){
					int Shot_C = ShotR1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 16, 0.5 + a*4/16, Angle_Base + b * 360/10, SHOT_LASER_TIP_ORANGE, 60, SHOT_LASER_TIP_ORANGE );
					ObjMove_AddPatternA2( Shot_C, 160, NO_CHANGE, NO_CHANGE, -0.01, 0, 0 );
					//ObjMove_AddPatternA2( Shot_C, 260, NO_CHANGE, 90, 0.01, rand( 1, 5 ), 0 );
					ObjMove_AddPatternA3( Shot_C, 260, NO_CHANGE, 90, 0.01, rand( 1, 5 ), 0, SHOT_DOT_ORANGE );
					ObjRender_SetBlendType( Shot_C, BLEND_ADD_ARGB  );
				}
				
				//let Warning_Laser = CreateStraightLaserA1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 90 + b * 360/10, 512, 16, 200, SHOT_LASER_AQUA, 60 );
				//let Warning_Laser_B = CreateStraightLaserA1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 90 + b * 360/10, 512, 24, 10, SHOT_LASER_AQUA, 60 );
				//ObjStLaser_SetPermitExpand( Warning_Laser, false  );
				//ObjStLaser_SetSource( Warning_Laser, false );
				
			}
			
			wait( 10 );
			
			let Speed_Array = [ 0.1, 0.2, 0.3 ];
			//let Angle_Base = GetAngleToPlayer( Fam_A );
			/*
			ascent( a in 0..20 ){
				
				int Shot_C = ShotR1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 16, 1, 90 + a * 360/20, SHOT_LARGE_DIAMOND_INVERT_AQUA, 20, SHOT_LARGE_DIAMOND_INVERT_AQUA );

			}		
			*/
			
			wait( 260 );				
			
			T_PlaySE( SE_CHIME_01, 35 );
			T_PlaySE( SE_ENEMY_DEATH, 28 );
			
			let Color_Array = [ SHOT_DIAMOND_DAZURE, SHOT_DIAMOND_AZURE, SHOT_DIAMOND_AQUA ];
			
			ascent( a in 0..3 ){
				
				//int Shot_C = ShotR1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 16, 1, 90 + a * 360/10, SHOT_LARGE_DIAMOND_GREEN, 20, SHOT_LARGE_DIAMOND_GREEN );

				ascent( b in 0..10 ){
					ascent( c in 0..3 ){
						
						int Shot_A = ShotR1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 16, 1 - Speed_Array[c] + a * 0.2/3, 90 + b * 360/10 + c*8/2, Color_Array[a], 20, SHOT_CLOUD_AZURE );
						int Shot_B = ShotR1( ObjMove_GetX( Fam_A ), ObjMove_GetY( Fam_A ), 16, 1 - Speed_Array[c] + a * 0.2/3, 90 + b * 360/10 - c*8/2, Color_Array[a], 20, SHOT_CLOUD_AZURE );
						//ObjMove_AddPatternA2( Shot_A, 60, NO_CHANGE, NO_CHANGE, -0.01, 0, 0 );
						//ObjMove_AddPatternA2( Shot_A, 300 - a, NO_CHANGE, 90, 0.01, 1, 0 );
					}
					
				}	
				
				//wait( 10 );
			}
			
			ObjEnemy_SetLife( Fam_A,  0 );
			//Obj_Delete( Fam_A );	
			wait( 400 );
			
		}
		
	}	
	
	task T_Manage_Laser( Obj, Angle  ){
		ascent( a in 0..100 ){
			ObjStLaser_SetAngle( Obj, Interpolate_Decelerate( -90, Angle, a/100 ) );
			yield;
		}
	}		
	
}	

task T_Boss_Shot_C{
	
	float ShotAngle = 0;
	
	while( Boss_Is_Alive( bossObj )){
	
		ascent( b in 0..26 ){
				
			ascent( a in 0..3 ){	
				int ShotObj_A = ShotA2( Get_MaxX - 32 - 24 * sin( ShotAngle*2 + a*16/3 ), 0 + b * Get_MaxY/26 + a*16/3, 0, 180, SHOT_BALL_AURA_DYELLOW, 10, SHOT_DOT_ORANGE );
				//int ShotObj_B = ShotA2( Get_MaxX - 32 + 24 * sin( ShotAngle*2 + a*16/3), 0 + b * Get_MaxY/32 + a*16/3, 0, 180, SHOT_DOT_ORANGE, 10, SHOT_DOT_ORANGE );
				
				if( b % 2 == 0 ){
					
					ObjMove_AddPatternA2( ShotObj_A, 180 - b, NO_CHANGE, NO_CHANGE, 0.01, 1 + a*0.5/3, 0 );
					//ObjMove_AddPatternA2( ShotObj_B, 400 - b, NO_CHANGE, NO_CHANGE, 0.01, 1 + a*0.5/3, 0 );
					
				}
				else{
					
					ObjMove_AddPatternA2( ShotObj_A, 180 - b, NO_CHANGE, NO_CHANGE, 0.01, 0.5 + a*0.5/3, 0 );
					//ObjMove_AddPatternA2( ShotObj_B, 400 - b, NO_CHANGE, NO_CHANGE, 0.01, 0.5 + a*0.5/3, 0 );
					
				}	
			}
			
			ShotAngle += 10;
			
			yield;
		}	
		wait( 200 );	

	
		ascent( b in 0..26 ){
				
			ascent( a in 0..3 ){	
				int ShotObj_A = ShotA2( 0 + 32 - 24 * sin( ShotAngle*2 + a*16/3 ), 0 + b * Get_MaxY/26 + a*16/3, 0, 0, SHOT_BALL_AURA_DYELLOW, 10, SHOT_DOT_ORANGE );
				//int ShotObj_B = ShotA2( Get_MaxX - 32 + 24 * sin( ShotAngle*2 + a*16/3), 0 + b * Get_MaxY/32 + a*16/3, 0, 180, SHOT_DOT_ORANGE, 10, SHOT_DOT_ORANGE );
				
				if( b % 2 == 0 ){
					
					ObjMove_AddPatternA2( ShotObj_A, 180 - b, NO_CHANGE, NO_CHANGE, 0.01, 1 + a*0.5/3, 0 );
					//ObjMove_AddPatternA2( ShotObj_B, 400 - b, NO_CHANGE, NO_CHANGE, 0.01, 1 + a*0.5/3, 0 );
					
				}
				else{
					
					ObjMove_AddPatternA2( ShotObj_A, 180 - b, NO_CHANGE, NO_CHANGE, 0.01, 0.5 + a*0.5/3, 0 );
					//ObjMove_AddPatternA2( ShotObj_B, 400 - b, NO_CHANGE, NO_CHANGE, 0.01, 0.5 + a*0.5/3, 0 );
					
				}	
			}
			
			ShotAngle += 10;
			
			yield;
		}	
		wait( 200 );			
	
		yield;
	}
	
}

task T_Boss_Shot_A{
	
	//float ShotAngle = 0;
	//float Shot_Range = 8;
	
	int Way = 3;
	int Stack = 8;
	float Laser_Width = 10;
	float Laser_Length = 100;
	//float Spacing = 8;
	
	float Sub_ShotRange = 8;
	int Sub_Shotrate = 4; 
	//int Shot_Color_Sub = SHOT_DOT_DORANGE;
	//int[] Tip_Color = [ SHOT_LASER_TIP_ORANGE, SHOT_LASER_TIP_BLUE, SHOT_LASER_TIP_RED ];
	
	while( Boss_Is_Alive( bossObj )){
		
		if( Boss_Is_Alive( bossObj ) ){
			T_Charge_A1( bossObj, 40, "Maple", CC_ORANGE );
			T_PlaySE( SE_CHARGE_00, 35 );		
		}
		wait( 50 );
		
		Obj_SetValue( bossObj,"Cast", 1 );
		
		wait( 30 );
		
		if( Boss_Is_Alive( bossObj ) ){
			T_PlaySE( SE_BURST_00, 35 );
			T_Burst_Circle_A1( bossObj, CC_ORANGE );		
		}
		loop( 1 ){
			
			Obj_SetValue( bossObj,"Cast", 1 );
			
			if( Boss_Is_Alive( bossObj ) ){
			
				T_SubShot_A();
				//ShotAngle += 10;
			}
			
			Obj_SetValue( bossObj,"Cast", 0 );
			wait( 200 );
		}
		
		Obj_SetValue( bossObj,"Cast", 0 );
		
		ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2 + rand( -32, 32 ), Get_CenterY/2 + 6 + rand( -8, 8 ), 10, 3 );	
		
		wait( 900 );
		yield;
	}		
	
	task T_SubShot_A(){
		
		int SubShot_Angle = 90;
		int[] Shot_Color_Sub = [ SHOT_RICE_DYELLOW, SHOT_RICE_AQUA, SHOT_RICE_GREEN ];
		
		if( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ){
			ascent( a in 0..64 ){
				ascent( c in 0..2 ){
					ascent( b in 0..5 ){
							
						//T_PlaySE( SE_LASER_00, 35 );
						
							int ShotObj_A = ShotA2( Get_MaxX - b * 32/5 + 24 * sin( SubShot_Angle*2 ), 24 + a * Get_MaxY/64, 0, SubShot_Angle + 180 + b*8/5, SHOT_BALL_DORANGE, 10, SHOT_RICE_INVERT_YELLOW );
							//int ShotObj_A = ShotR1( Get_MaxX + 24 * sin( SubShot_Angle*2 ) + 24 * sin( SubShot_Angle*2 ), 24 + a * Get_MaxY/64, 1, 0, SubShot_Angle + b * 360/10 + c*2/2, SHOT_RICE_INVERT_YELLOW, 18, SHOT_RICE_INVERT_YELLOW );
							ObjMove_AddPatternA2( ShotObj_A, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );			
							ObjRender_SetBlendType( ShotObj_A, BLEND_ADD_ARGB  );
							//int ShotObj_B = ShotA2( 0 + b * 32/5 + 24 * sin( SubShot_Angle*2 ), 24 + a * Get_MaxY/64, 0, SubShot_Angle - b * 360/5 - c*2/2, SHOT_RICE_INVERT_YELLOW, 10, SHOT_RICE_INVERT_YELLOW );
							//int ShotObj_A = ShotR1( Get_MaxX + 24 * sin( SubShot_Angle*2 ) + 24 * sin( SubShot_Angle*2 ), 24 + a * Get_MaxY/64, 1, 0, SubShot_Angle + b * 360/10 + c*2/2, SHOT_RICE_INVERT_YELLOW, 18, SHOT_RICE_INVERT_YELLOW );
							//ObjMove_AddPatternA2( ShotObj_B, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );								
						/*
						if( a % 2 == 0 ){	
						
							int ShotObj_A = ShotR1( Get_MaxX + 20, 24 + a * Get_MaxY/64, 48, 0, SubShot_Angle + b * 360/10 + c*2/2, SHOT_RICE_INVERT_YELLOW, 18, SHOT_RICE_INVERT_YELLOW );
							ObjMove_AddPatternA2( ShotObj_A, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );
							
							//int ShotObj_B = ShotR1( -20, 24 + a * Get_MaxY/64, 48, 0, -SubShot_Angle - b * 360/10 - c*2/2, SHOT_RICE_INVERT_DORANGE, 18, SHOT_RICE_INVERT_DORANGE );
							//ObjMove_AddPatternA2( ShotObj_B, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );							
						}
						else{
							
							int ShotObj_A = ShotR1( Get_MaxX + 20, Get_MaxY - a * Get_MaxY/64, 48, 0, SubShot_Angle + b * 360/10 + c*2/2, SHOT_RICE_INVERT_DYELLOW, 18, SHOT_RICE_INVERT_DYELLOW );
							ObjMove_AddPatternA2( ShotObj_A, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );				
				
						}	
						*/
		
					}
				}	
				wait( 2 );
				SubShot_Angle += 10;
			}	
			
			wait( 100 );
			
			ascent( a in 0..64 ){
				ascent( c in 0..2 ){
					ascent( b in 0..10 ){
							
						//T_PlaySE( SE_LASER_00, 35 );
						if( a % 2 == 0 ){	
							int ShotObj_A = ShotR1( -20, 24 + a * Get_MaxY/64, 48, 0, -SubShot_Angle - b * 360/10 + c*2/2, SHOT_RICE_INVERT_ORANGE, 18, SHOT_RICE_INVERT_ORANGE );
							ObjMove_AddPatternA2( ShotObj_A, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );

							
							//int ShotObj_B = ShotR1( -20, 24 + a * Get_MaxY/64, 48, 0, -SubShot_Angle - b * 360/10 - c*2/2, SHOT_RICE_INVERT_DORANGE, 18, SHOT_RICE_INVERT_DORANGE );
							//ObjMove_AddPatternA2( ShotObj_B, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );							
						}
						else{
							
							int ShotObj_A = ShotR1( -20, Get_MaxY - a * Get_MaxY/64, 48, 0, -SubShot_Angle - b * 360/10 + c*2/2, SHOT_RICE_INVERT_DORANGE, 18, SHOT_RICE_INVERT_DORANGE );
							ObjMove_AddPatternA2( ShotObj_A, 60, NO_CHANGE, NO_CHANGE, 0.01, 1, 0 );				
				
						}	
		
					}
				}	
				wait( 2 );
				SubShot_Angle += 10;
			}		

			wait( 200 );	
		
			
		}
		
		wait( 600 );

		
	}		
	
}	

//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		
		yield;
		
		SetAutoDeleteObject(true);
		T_Boss_Shotdown( bossObj, "Petal", CC_RED );
		wait( 200 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
	
		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

