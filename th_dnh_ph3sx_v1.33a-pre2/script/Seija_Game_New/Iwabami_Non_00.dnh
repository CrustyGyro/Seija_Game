#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Iwabami_Non_00"]
//#Background["./Stage/BG/STG_00.dnh"];
#Player[ "./Player/PL_Reimu.dnh" ]
#System["./System/System_Main_Hud.dnh"]

//--------------------------------------------------Variables------------------------------------------------------

let bossObj;
let objScene = GetEnemyBossSceneObjectID();
let bossX = 0;
let bossY = 0;

//SetIntersectionVisualization( true );

let BossTex = GetCurrentScriptDirectory() ~ "./Resource/Textures/Boss/Test_Boss.png";

//---------------------------------------------------Include-------------------------------------------------------

	#include "./lib/Index_Boss.dnh"

//----------------------------------------------------Start--------------------------------------------------------

@Initialize {

	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);	
	
	ObjEnemy_Regist( bossObj );	

	T_Lifebar( bossObj );
	ObjEnemy_SetDamageRate( bossObj, 0, 0 );	

	Render_WheelGhost_A1( bossObj, ENEMY_BLUE );

	ObjRender_SetTextureFilter( bossObj, FILTER_NONE, FILTER_NONE, FILTER_NONE );
	
	ObjMove_SetDestAtWeight( bossObj, GetStgFrameWidth/2, Get_CenterY/2 + 16, 15, 8 );
	
	
	//SetPlayerLife( 8 );
	T_Main;
	T_End;
	
}

@Event { 

	alternative(GetEventType()) 
	case( EV_REQUEST_LIFE ) { 
		SetScriptResult( 4500 ); // 3000-4500 For Nons ( At 100% Damage Rate. )
	}
	case( EV_REQUEST_TIMER ) { 
		SetScriptResult( 45 ); //40-50 For standard Nons.
	}	


} 

@MainLoop {

	bossX = ObjMove_GetX( bossObj );
	bossY = ObjMove_GetY( bossObj );

	ObjEnemy_SetIntersectionCircleToShot( bossObj, bossX, bossY, 16 );
	ObjEnemy_SetIntersectionCircleToPlayer( bossObj, bossX, bossY, 8 );
	
	yield;
}

@Finalize {
} 

//----------------------------------------------------Patterns--------------------------------------------------------

task T_Main {


	float Shot_Angle = 0;

	NotifyEventAll( EV_BOSS_EFFECT, bossObj, CC_CYAN );
	
	//let Color = [ DOT_GRAY, DOT_RED, DOT_YELLOW, DOT_CYAN, DOT_PURPLE, DOT_GREEN ];

	yield;

	wait( 45 );	
	
	//T_PlaySE( SE_CHARGE_00, 30 );
	//T_Charge_A1( bossObj, 20, "Petal", CC_PINK );

	//wait( 100 );	
	
	ObjEnemy_SetDamageRate( bossObj, 1, 1 );

	while( Boss_Is_Alive( bossObj ) ){
		
		T_PlaySE( SE_SHOT_03, 30 );
		
		T_Boss_Shot_A( 24 * sin( Shot_Angle ));
		
		Shot_Angle+=10;
		
		wait( 20 );
		yield;

	}
}	

task T_Boss_Shot_A( Angle ){
	
	int Way = 8;
	int Stack = 3;
	
	//int[] Color_Array = [ SHOT_DROP_AZURE, SHOT_DROP_PURPLE, SHOT_DROP_AZURE, SHOT_DROP_AZURE];
	
	ascent( a in 0..3 ){
		let Pattern_Obj_A = Pattern_Shot_A1( bossX, bossY, 2, 32, -90 + Angle + a*3/2, 16, SHOT_DROP_AZURE, PATTERN_FAN, Way, Stack, 20, SHOT_CLOUD_BLUE );
		for( int i = 0; i < Way * Stack; i++ ) {
			ObjMove_AddPatternC2( Pattern_Obj_A[ i ], 10, NO_CHANGE, NO_CHANGE, NO_CHANGE, 0.05, 1, 3, 0, 0  ); 
		}
	}
}	

//-----------------------------------------------------Death---------------------------------------------------------

task T_End {
	
    while( ObjEnemy_GetInfo( bossObj, INFO_LIFE ) > 0 ) {
	     yield;
	}
	
	if( ObjEnemyBossScene_GetInfo( GetEnemyBossSceneObjectID, INFO_IS_LAST_STEP ) ){

		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		//wait( 60 );
		
		Obj_Delete( bossObj );	
		
		ENEMY_CLEAR = true;
		
		yield;
		
		ENEMY_CLEAR = false;
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
		
	}	
	else{
	
	
		NotifyEventAll( EV_CLEAR_ENEMY_SHOTS, GetPlayerObjectID(), 60, 12 );
		//DeleteShotAll( TYPE_ALL, TYPE_ITEM );
		
		yield;
		
		SetAutoDeleteObject(true);
		
		Obj_Delete( bossObj );	
		
		wait( 500 );
		
		CloseScript( GetOwnScriptID() );
	
	}
	
	//SetAutoDeleteObject(true);
	
	//Obj_Delete( bossObj );	
	//CloseScript( GetOwnScriptID() );
	
}

